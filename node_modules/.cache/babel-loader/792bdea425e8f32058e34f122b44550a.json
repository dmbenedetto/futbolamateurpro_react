{"ast":null,"code":"var _jsxFileName = \"C:\\\\CS\\\\Workspace\\\\Proyecto Futbol\\\\cliente-react\\\\futbol-cliente\\\\src\\\\context\\\\proyectos\\\\MenuState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport MenuContext from './MenuContext';\nimport MenuReducer from './MenuReducer';\nimport { CAMBIAR_MENU } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuState = props => {\n  _s();\n\n  /*\r\n  const menus = [\r\n      {id: 1, nombre: 'MiEquipo', estado: true},\r\n      {id: 2, nombre: 'Jugadores', estado: false},\r\n      {id: 3, nombre: 'Plantel', estado: false},\r\n      {id: 4, nombre: 'Partidos', estado: false},\r\n      {id: 5, nombre: 'Formacion', estado: false},\r\n      {id: 6, nombre: 'Entrenamientos', estado: false},\r\n      {id: 7, nombre: 'Reportes', estado: false}\r\n  ]\r\n  */\n  const initialSate = {\n    //menus : [],\n    seleccion: 7\n  }; //dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(MenuReducer, initialSate); //serie de funciones para el crud\n\n  const cambiarMenu = () => {\n    dispatch({\n      type: CAMBIAR_MENU,\n      payload: state.seleccion\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MenuContext.Provider, {\n    value: {\n      seleccion: state.seleccion,\n      cambiarMenu\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuState, \"AQy1xtJjh3zpuKYINrwyY15b6lE=\");\n\n_c = MenuState;\nexport default MenuState;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuState\");","map":{"version":3,"sources":["C:/CS/Workspace/Proyecto Futbol/cliente-react/futbol-cliente/src/context/proyectos/MenuState.js"],"names":["React","useReducer","MenuContext","MenuReducer","CAMBIAR_MENU","MenuState","props","initialSate","seleccion","state","dispatch","cambiarMenu","type","payload","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,YAAR,QAA2B,aAA3B;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,QAAMC,WAAW,GAAG;AAChB;AACAC,IAAAA,SAAS,EAAG;AAFI,GAApB,CAduB,CAmBvB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,WAAD,EAAcI,WAAd,CAApC,CApBuB,CAsBvB;;AACA,QAAMI,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAE;AACNE,MAAAA,IAAI,EAAER,YADA;AAENS,MAAAA,OAAO,EAAEJ,KAAK,CAACD;AAFT,KAAF,CAAR;AAIH,GALD;;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHA,MAAAA,SAAS,EAAGC,KAAK,CAACD,SADf;AAEHG,MAAAA;AAFG,KADX;AAAA,cAMKL,KAAK,CAACQ;AANX;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAxCD;;GAAMT,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport MenuContext from './MenuContext';\r\nimport MenuReducer from './MenuReducer';\r\nimport {CAMBIAR_MENU} from '../../types';\r\n\r\nconst MenuState = props => {\r\n    \r\n    /*\r\n    const menus = [\r\n        {id: 1, nombre: 'MiEquipo', estado: true},\r\n        {id: 2, nombre: 'Jugadores', estado: false},\r\n        {id: 3, nombre: 'Plantel', estado: false},\r\n        {id: 4, nombre: 'Partidos', estado: false},\r\n        {id: 5, nombre: 'Formacion', estado: false},\r\n        {id: 6, nombre: 'Entrenamientos', estado: false},\r\n        {id: 7, nombre: 'Reportes', estado: false}\r\n    ]\r\n    */\r\n   \r\n    const initialSate = {\r\n        //menus : [],\r\n        seleccion : 7\r\n    }\r\n\r\n    //dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(MenuReducer, initialSate)\r\n\r\n    //serie de funciones para el crud\r\n    const cambiarMenu = () => {\r\n        dispatch ({\r\n            type: CAMBIAR_MENU,\r\n            payload: state.seleccion\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MenuContext.Provider\r\n            value={{\r\n                seleccion : state.seleccion,\r\n                cambiarMenu\r\n            }}\r\n        >\r\n            {props.children}\r\n        </MenuContext.Provider>\r\n    )\r\n}\r\nexport default MenuState;"]},"metadata":{},"sourceType":"module"}